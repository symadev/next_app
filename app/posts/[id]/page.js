
import Comments from '@/app/component/comments';
import getPostComments from '@/app/lib/getPostComments';
import getPosts from '@/app/lib/getPosts';
import React, { Suspense } from 'react'


//making the dynamic metadata
//this function will run on the server side

export  async function generateMetadata({params}) {

    const {id} = params;
     const posts = await getPosts(id);
    return {
   title: posts.title,
  description: "Generated by create next app",
    }
};




export default async function PostpageContent({params}) {
    const {id} = params;



        const postsPromise = await getPosts(id);
        const commentsPromise = await getPostComments(id);


        const posts = await postsPromise;

        // const [posts, comments] = await Promise.all([postsPromise, commentsPromise]);

        // Promise.all([ ... ]) মানে হলো, একসাথে দুইটা (বা একাধিক) promise চালাও এবং সবগুলো শেষ হওয়া পর্যন্ত wait করো।

        //promise >> post ar porei commnets return korbe or show korbe  

        // here bacically the promices initiate equally , thats not follow thw waterfall method
        // the waterfall method follow the sequence of the promises, means one after another
  return (
    <div>
        <h1 className=' text-blue-400 font-extrabold'>{posts.title}</h1>
        <h3 className='mt-4' >{posts.body}</h3>
        <hr></hr>

      <Suspense fallback={<h1>Loading comments...</h1>}>
  <Comments promise={commentsPromise} />
</Suspense>


       

        
    </div>
  )
}
